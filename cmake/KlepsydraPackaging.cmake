# Copyright 2023 Klepsydra Technologies AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file contains defines for cpack to make Klepsydra projects packages
#
#
# Before including this file couple variables should be set:
# KPSR_VERSION_MAJOR - major version
# KPSR_VERSION_MINOR - minor version
# KPSR_VERSION_PATCH - patch version
# KPSR_PACKAGE_DESCRIPTION - package description
# KPSR_PACKAGE_DESCRIPTION_SUMMARY - package description summary
# KPSR_PACKAGE_OPTIONS - optional - if package/library contains additional options not covered by default

set(CPACK_SET_DESTDIR true)

set(CPACK_GENERATOR "DEB;TGZ")

set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "${KPSR_PACKAGE_DESCRIPTION_SUMMARY}")
set(CPACK_PACKAGE_DESCRIPTION "${KPSR_PACKAGE_DESCRIPTION}")
set(CPACK_PACKAGE_VENDOR "Klepsydra Technologies AG")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.md")
set(CPACK_PACKAGE_CONTACT "support@klepsydra.com")
set(CPACK_PACKAGE_VERSION_MAJOR "${KPSR_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${KPSR_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${KPSR_VERSION_PATCH}")
set(KPSR_VERSION
    "${KPSR_VERSION_MAJOR}.${KPSR_VERSION_MINOR}.${KPSR_VERSION_PATCH}")
set(CPACK_PACKAGE_VERSION "${KPSR_VERSION}")

# arch
if(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "i386")
    set(CPACK_RPM_PACKAGE_ARCHITECTURE "i686")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
    set(CPACK_RPM_PACKAGE_ARCHITECTURE "x86_64")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "armhf")
    set(CPACK_RPM_PACKAGE_ARCHITECTURE "armhf")
elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "arm64")
    set(CPACK_RPM_PACKAGE_ARCHITECTURE "aarch64")
elseif(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "armv7l")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "armhf")
    set(CPACK_RPM_PACKAGE_ARCHITECTURE "armhf")
else()
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
    set(CPACK_RPM_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
endif()

set(CPACK_PACKAGE_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_SOURCE_PACKAGE_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)

# rpm options
set(CPACK_RPM_COMPONENT_INSTALL TRUE)
set(CPACK_RPM_PACKAGE_SUMMARY ${CPACK_PACKAGE_DESCRIPTION_SUMMARY})
set(CPACK_RPM_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION})
set(CPACK_RPM_PACKAGE_URL "https://www.klepsydra.com")
set(CPACK_RPM_PACKAGE_LICENSE "PROPRIETARY")
set(CPACK_RPM_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_LIBS_PACKAGE_NAME "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}")
set(CPACK_RPM_LIBS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_DEV_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dev_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_DEV_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dev")
set(CPACK_RPM_DBG_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dbg_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_DBG_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dbg")
set(CPACK_RPM_DOCS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-doc_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_DBG_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dbg")
set(CPACK_RPM_TESTS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-tests_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_TESTS_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-tests")
set(CPACK_RPM_EXAMPLES_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-examples_${KPSR_VERSION}_${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm"
)
set(CPACK_RPM_EXAMPLES_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-examples")

# deb options
set(CPACK_DEBIAN_PACKAGE_MAINTAINER
    "Klepsydra Technologies Developers <support@klepsydra.com>")
set(CPACK_DEB_COMPONENT_INSTALL TRUE)
set(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
set(CPACK_DEBIAN_PACKAGE_SECTION "libs")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://klepsydra.com")
set(CPACK_DEBIAN_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_LIBS_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}")
set(CPACK_DEBIAN_LIBS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_DEV_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dev_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_DEV_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dev")
set(CPACK_DEBIAN_DBG_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dbg_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_DBG_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dbg")
set(CPACK_DEBIAN_DOCS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-doc_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_DOCS_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-doc")
set(CPACK_DEBIAN_TESTS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-tests_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_TESTS_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-tests")
set(CPACK_DEBIAN_EXAMPLES_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-examples_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb"
)
set(CPACK_DEBIAN_EXAMPLES_PACKAGE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-examples")

# archives options
set(CPACK_ARCHIVE_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_ARCHIVE_LIBS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_ARCHIVE_DEV_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dev_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_ARCHIVE_DBG_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-dbg_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_ARCHIVE_DOCS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-doc_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_ARCHIVE_TESTS_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-tests_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)
set(CPACK_ARCHIVE_EXAMPLES_FILE_NAME
    "${CMAKE_PROJECT_NAME}${KPSR_PACKAGE_OPTIONS}-examples_${KPSR_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}"
)

set(CPACK_ARCHIVE_COMPONENT_INSTALL TRUE)

# display names
set(CPACK_COMPONENT_LIBS_DISPLAY_NAME "Libraries and data")
set(CPACK_COMPONENT_DEV_DISPLAY_NAME "Development files")
set(CPACK_COMPONENT_DBG_DISPLAY_NAME "Debug files")
set(CPACK_COMPONENT_DOCS_DISPLAY_NAME "Documentation")
set(CPACK_COMPONENT_TESTS_DISPLAY_NAME "Tests")
set(CPACK_COMPONENT_EXAMPLES_DISPLAY_NAME "Examples")

# depencencies
set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS TRUE)
set(CPACK_DEBIAN_ENABLE_COMPONENT_DEPENDS TRUE)
set(CPACK_COMPONENT_LIB_REQUIRED TRUE)
set(CPACK_COMPONENT_DEV_DEPENDS libs)
set(CPACK_COMPONENT_DBG_DEPENDS libs)
set(CPACK_COMPONENT_DOCS_DEPENDS libs)
set(CPACK_COMPONENT_TESTS_DEPENDS libs)
set(CPACK_COMPONENT_EXAMPLES_DEPENDS libs)

include(CPack)
